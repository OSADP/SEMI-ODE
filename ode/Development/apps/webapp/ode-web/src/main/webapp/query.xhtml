<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>ODE Query Test and Demo UI</title>
<style type="text/css">
body {
/*
	background-color: #FFFFCC
   color: #808080
*/ 
   font-family: Sans-serif;
}

h1 {
   color: #3366FF
}

h2 {
   color: #6699FF
}

#controls-container {
   float: left;
   width: 1500px
}

#controls-container div {
   padding: 5px;
}

#left-container {
   float: left;
   width: 400px
}

#left-container div {
   padding: 5px;
}

#middle-container {
   float: left;
   width: 400px
}

#middle-container div {
   padding: 5px;
}

#right-container {
   float: left;
   width: 400px
}

#right-container div {
   padding: 5px;
}

#console-container {
   float: left;
   margin-left: 15px;
   width: 1200px;
}

#console {
   border: 1px solid #CCCCCC;
   border-right-color: #999999;
   border-bottom-color: #999999;
   height: 200px;
   overflow-y: scroll;
   padding: 5px;
   width: 100%;
}

#console p {
   padding: 0;
   margin: 0;
}
</style>
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css"></link>
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<script type="application/javascript">
<![CDATA[
  "use strict";

$(document ).ready(function() {
//    document.addEventListener("DOMContentLoaded", function() {
//      // Remove elements with "noscript" class - <noscript> is not allowed in XHTML
      var noscripts = document.getElementsByClassName("noscript");
      for (var i = 0; i < noscripts.length; i++) {
         noscripts[i].parentNode.removeChild(noscripts[i]);
      }
//  }, false);
  
  var ws = null;
  var started = false;
  var connected = false;
  var token = null;
  
  $('#connect').click(function(){
	connect();
  });
  $('#disconnect').click(function(){
	disconnect();
  });
  $('#send').click(function(){
	send();
  });
  //Radio button click handler
  $("#selectData input:radio").click(function() {
	  if (token==null){
		dialog.dialog( "open" );
    }
	  else{
	  updateRequestUri( $(this).val());
	  }
 });
  
  function setConnectionState(c, s) {
     connected = c;
     started = s;
     
     if (!connected)
         started = false;

      $('#connect').prop("disabled",connected);
      $('#disconnect').prop("disabled",!connected);
      $('#send').prop("disabled", (started || !connected));
	  setButtonHoverOver('connect',connected);
	  setButtonHoverOver('disconnect',connected);
	  setButtonHoverOver('send',(started || !connected))
	  
  }
  
  function setButtonHoverOver(buttonId,isHoverEnabled){
      if (isHoverEnabled)
		$('#'+buttonId).hover(function(){
			$(this).addClass('ui-state-hover');
		},function(){
			$(this).removeClass('ui-state-hover');
		});
	else{
		$('#'+buttonId).unbind('mouseout keyup mouseup hover');
		$('#'+buttonId).removeClass('ui-state-hover');
	}
  }

  function connect() {
      var requestUri =  $('#requestUri').val();	
      if (requestUri == '') {
          alert('Please select server side connection implementation.');
          return;
      }
      if ('WebSocket' in window) {
          ws = new WebSocket(requestUri);
      } else if ('MozWebSocket' in window) {
          ws = new MozWebSocket(requestUri);
      } else {
          alert('WebSocket is not supported by this browser.');
          return;
      }

      ws.onopen = function (event) {
          setConnectionState(true, false);
          log('Info: WebSocket connection opened.');
      };
      ws.onmessage = function (event) {
         if (!started) {
               var message = JSON.parse(event.data);
               if (message["payload"]["code"] != "SUCCESS") {
                   setConnectionState(true, true);
               }
         }
         log(event.data);
      };
      ws.onclose = function (event) {
                setConnectionState(false, false);
          log('Info: WebSocket connection closed, Code: ' + event.code + (event.reason == "" ? "" : ", Reason: " + event.reason));
      };
  }

  function disconnect() {
      if (ws != null) {
          ws.close();
          ws = null;
      }
      setConnectionState(false, false);  
	  setButtonHoverOver('send',false);
  }

  function send() {
      if (ws != null) {
      var request = {};
      request["nwLat"] = document.getElementById('nwLat').value;
      request["nwLon"] = document.getElementById('nwLon').value;
      request["seLat"] = document.getElementById('seLat').value;
      request["seLon"] = document.getElementById('seLon').value;
      request["skip"] = $("#skip").val();
      request["limit"] = $("#limit").val();
      
      var s1 = {};
      s1["id"] = "LarnedShelbyGriswold";
      s1["startPoint"] = {"latitude":42.328468, "longitude":-83.047470};//W. Larned and Shelby
      s1["endPoint"] = {"latitude":42.329067, "longitude":-83.046086};//W. Larned and Griswold
      
      var s2 = {};
      s2["id"] = "LarnedShelbyRandolph";
      s2["prevSegment"] = "LarnedShelbyGriswold";
      s2["endPoint"] = {"latitude":42.330530, "longitude":-83.042701};//Larned and Randolph
      
      var polyline = [];
      polyline.push(s1);
      polyline.push(s2);
      
      request["polyline"] = {"segments":polyline};
      

      var reqStr = JSON.stringify(request); 
          ws.send(reqStr);
                log('Sent: ' +  reqStr);
      } else {
          alert('WebSocket connection not established, please connect.');
      }
  }

  function updateRequestUri(requestUri) {
	  
      if (window.location.protocol == 'http:') {
          document.getElementById('requestUri').value = 'ws://' + window.location.host + requestUri+'?token='+token;
      } else {
          document.getElementById('requestUri').value = 'wss://' + window.location.host + requestUri+'?token='+token;
      }
            setConnectionState(false, false);
             
            var now = new Date();
            var yesterday = new Date();
            yesterday.setDate(now.getDate()-1);
			$("#startDate").val( yesterday.toISOString());
			$("#endDate").val(now.toISOString());
  }

  function log(msgOrData) {
      // TODO convert to JQuery Syntax
	  var console = document.getElementById('console');
      var p = document.createElement('p');
      p.style.wordWrap = 'break-word';
      p.appendChild(document.createTextNode(msgOrData));
      console.appendChild(p);
      while (console.childNodes.length > 25) {
          console.removeChild(console.firstChild);
      }
      console.scrollTop = console.scrollHeight;
  }
  
  function getToken(email, password)  {
     var url = window.location.protocol+'//'+ window.location.host + '/ode/api/auth/login';
     $.ajax({
        type: "GET",
        dataType:'json',
        url: url,
        async: false,
        headers: {
           "Authorization": "Basic " + btoa(email + ":" + password)
        },
        success: function (data) {
           log("Login Response: " + JSON.stringify(data));
           var payload = data["payload"];
           if (payload != null) {
             token = payload["token"];
             if (token != null) {
                setConnectionState(true,false)
                if ( $("#selectData input:radio").is(":checked"))
                   updateRequestUri( $("#selectData input:radio").filter(":checked").val());
             }
           }
        },
        error: function (jqXHR, textStatus, errorThrown ) {
           log("Status: " + textStatus);
           log("Error Thrown: " + errorThrown);
           log("Details: " + JSON.stringify(jqXHR));
        }
     });  
  }
  
  // modal window handlers 
  // dialog box example from Jquery UI web site
  var dialog, form,
      // From http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#e-mail-state-%28type=email%29
      emailRegex = /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,
      name = $( "#name" ),
      email = $( "#email" ),
      password = $( "#password" ),
      allFields = $( [] ).add( email ).add( password ),
      tips = $( ".validateTips" );
 
    function updateTips( t ) {
      tips
        .text( t )
        .addClass( "ui-state-highlight" );
      setTimeout(function() {
        tips.removeClass( "ui-state-highlight", 1500 );
      }, 500 );
    }
 
    function checkLength( o, n, min, max ) {
      if ( o.val().length > max || o.val().length < min ) {
        o.addClass( "ui-state-error" );
        updateTips( "Length of " + n + " must be between " +
          min + " and " + max + "." );
        return false;
      } else {
        return true;
      }
    }
 
    function checkRegexp( o, regexp, n ) {
      if ( !( regexp.test( o.val() ) ) ) {
        o.addClass( "ui-state-error" );
        updateTips( n );
        return false;
      } else {
        return true;
      }
    }
 
    function addUser() {
      var valid = true;
      allFields.removeClass( "ui-state-error" );
 
      valid = valid && checkLength( email, "email", 6, 80 );
      valid = valid && checkLength( password, "password", 4, 24 );
 
      valid = valid && checkRegexp( name, /^[a-z]([0-9a-z_\s])+$/i, "Username may consist of a-z, 0-9, underscores, spaces and must begin with a letter." );
      valid = valid && checkRegexp( email, emailRegex, "eg. ui@jquery.com" );
      valid = valid && checkRegexp( password, /^[0-9a-zA-Z!#$%&*_\-]+$/, "Password field only allow : a-z 0-9!#$%&*_-" );
       
      if ( valid ) {
        getToken(email.val(),password.val());
        dialog.dialog( "close" );
      }
      return valid;
    }
 
    dialog = $( "#dialog-form" ).dialog({
      autoOpen: false,
      height: 330,
      width: 350,
      modal: true,
      buttons: {
        "Request Token": addUser,
        Cancel: function() {
          dialog.dialog( "close" );
        }
      },
      close: function() {
        form[ 0 ].reset();
        allFields.removeClass( "ui-state-error" );
      }
    });
 
    form = dialog.find( "form" ).on( "submit", function( event ) {
      event.preventDefault();
      addUser();
    });
 
    $( "#get-token" ).button().on( "click", function() {
      dialog.dialog( "open" );
    });

   });  // jquery 
]]>



</script>
</head>
<body >
   <h1>ODE Query Test and Demo UI</h1>
   <p><a href="subscribe.xhtml">ODE Subscription</a></p>
   <p><a href="deposit.xhtml">ODE Deposit</a></p>
   <div class="noscript">
      <h2 style="color: #ff0000">Seems your browser doesn't support
         Javascript! Websockets rely on Javascript being enabled. Please
         enable Javascript and reload this page!</h2>
   </div>
   <div id="controls-container">
      <div id="left-container">
         <div id="selectData">
            <hr />
            <h2>Select Data:</h2>
            <input id="vsd" type="radio" name="group1" value="/ode/api/ws/qry/veh"/>
            <label for="vsd">Vehicles</label> <br />
            
            <input id="isd" type="radio" name="group1" value="/ode/api/ws/qry/int"/>
            <label for="isd">Intersections</label><br />
            
            <input id="agg" type="radio" name="group1" value="/ode/api/ws/qry/agg"/>
            <label for="agg">Aggregates</label> <br />
            
             <input id="adv" type="radio" name="group1" value="/ode/api/ws/qry/adv"/>
            <label for="adv">Advisory Messages</label> <br />
            
            <input id="spat" type="radio" name="group1" value="/ode/api/ws/qry/spat" />
            <label for="isd">SPaT</label> <br />
             
            <input id="map" type="radio" name="group1" value="/ode/api/ws/qry/map" />
            <label for="isd">Map</label> <br /> 

            <input id="requestUri" type="text" size="40" style="width: 350px" />
            <h2>Enter Time Period</h2>
            <label>Start Date-Time</label> <input id="startDate" type="text" value = "yyyy-MM-ddTHH:mm:ss" size="40" style="width: 350px" /><br />
            <label>End Date-Time</label> <input id="endDate" type="text" value = "yyyy-MM-ddTHH:mm:ss" size="40" style="width: 350px" /><br />
         
         </div>
      </div>
      <div id="middle-container">
         <div id="geoRegion">
            <hr />
            <h2>Enter Geographic Region</h2>
            <br />
            <label>NW Latitude</label> <input id="nwLat" type="text" value = "43.652969118285434" size="40" style="width: 350px" /><br />
            <label>NW Longitude</label> <input id="nwLon" type="text" value = "-85.94707489013672" size="40" style="width: 350px" /><br />
            <label>SE Latitude</label> <input id="seLat" type="text" value = "36.4765153148293" size="40" style="width: 350px" /><br />
            <label>SE Longitude</label> <input id="seLon" type="text" value = "-74.53468322753906" size="40" style="width: 350px" /><br />
            <h3>Road Segments</h3>
            <input id="s1" type="text" value = "s1NB" size="10"/><input id="lat1" type="text" value = "42.328506" size="10"/><input id="lon1" type="text" value = "-83.047467" size="10"/><br />
            <input id="s2" type="text" value = "s2NB" size="10"/><input id="lat2" type="text" value = "42.329065" size="10"/><input id="lon2" type="text" value = "-83.046073" size="10"/><br />
            <input id="s3" type="text" value = "s3NB" size="10"/><input id="lat3" type="text" value = "42.329841" size="10"/><input id="lon3" type="text" value = "-83.046663" size="10"/><br />
         </div>
      </div>
      <div id="right-container">
         <!-- 
            <div id="selectFormat">
               <hr/>
               <h2>Select Format:</h2><br/>
               <input id="json" type="radio" name="group2" value="json"/>
               <label for="json">JSON</label>
               <input id="hex" type="radio" name="group2" value="hex"/>
               <label for="hex">Hex</label>
               <input id="base64" type="radio" name="group2" value="base64"/>
               <label for="vsd">Base 64</label>
               <br/>
            </div>
         -->
         <div id="destination">
            <hr />
            <h2>Options:</h2><br />
            <label>skip</label> <input id="skip" type="text" value = "0" size="10" style="width: 100px" /><br />
            <label>Limit</label> <input id="limit" type="text" value = "100" size="10" style="width: 100px" /><br />
<!--               
            <input id="screen" type="checkbox" checked="checked" value="screen" />
              <label for="screen">On Screen</label><br />
            <input id="file" type="checkbox" value="file" />
              <label for="file">Server File Path</label><br />
            <a href="https://ode/download/">https://ode/download/</a><br />
-->
            <br />
         </div>
      </div>
   </div>
   <div id="console-container">
      <div>
         <hr />
			<button id="connect" disabled="disabled" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" role="button">
				<span class="ui-button-text">Connect</span></button>
			<button id="send" disabled="disabled" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" role="button">
				<span class="ui-button-text">Send Request</span></button>  
			<button id="disconnect" disabled="disabled" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" role="button">
				<span class="ui-button-text">Disconnect</span></button>
				
			<button id="get-token">Get Access Token</button>
      </div>
      <hr />
      <div id="console" />
   </div>
   
  <div id="dialog-form" title="Access Token">
  <p class="validateTips">All form fields are required.</p>
 
  <form>
    <fieldset>
      <label for="email">Email</label>
      <input type="text" name="email" id="email" value="jane@smith.com" class="text ui-widget-content ui-corner-all"></input>
      <label for="password">Password</label>
      <input type="password" name="password" id="password" value="xxxxxxx" class="text ui-widget-content ui-corner-all"></input>
 
      <!-- Allow form submission with keyboard without duplicating the dialog button -->
      <input type="submit" tabindex="-1" style="position:absolute; top:-1000px"> </input>
    </fieldset>
  </form>
  </div>


</body>
</html>